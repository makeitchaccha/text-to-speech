services:
  bot:
    image: ghcr.io/makeitchacchha/text-to-speech:latest
    restart: unless-stopped
    volumes:
      - ./config/bot/config.toml:/var/lib/config.toml
    networks:
      - texttospeech
    command: '-config=/var/lib/config.toml --sync-commands=true'

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - ./redis_data:/data
    networks:
      - texttospeech

  postgres:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - texttospeech
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: text-to-speech:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      GOOSE_MIGRATION_DIR: /app/migrations
    networks:
      - texttospeech
    entrypoint: goose
    command: status

networks:
  texttospeech:
    name: texttospeech
