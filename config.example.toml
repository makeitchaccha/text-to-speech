[log]
# valid levels are "debug", "info", "warn", "error"
level = "info"
# valid formats are "text" and "json"
format = "text"
# whether to add the log source to the log message
add_source = true

[bot]
# add guild ids the commands should sync to, leave empty to sync globally
dev_guilds = []
# the bot token
token = "..."
# valid languages are "en-US", "ja-JP". 
# We are welcome for contributions to add more languages -> https://github.com/makeitchaccha/text-to-speech
default_lang = "en-US"
# fallback preset name
# this preset will be used if the user and guild does not have a preset configured.
# they must be defined in the [presets] section.
fallback_preset_id = "wavenet-a-woman"

# tts (text-to-speech) configuration
# the values here are used to configure the text-to-speech.
# you can find the list of available voices here:
#  engine = "google" -> https://cloud.google.com/text-to-speech/docs/voices
[presets.wavenet-a-woman]
engine = "google"
language = "ja-JP"
voice_name = "ja-JP-Wavenet-A"
speaking_rate = 1.2

[presets.wavenet-c-man]
engine = "google"
language = "ja-JP"
voice_name = "ja-JP-Wavenet-C"
speaking_rate = 1.2

[presets.wavenet-d-man]
language = "ja-JP"
voice_name = "ja-JP-Wavenet-D"
speaking_rate = 1.2

# [presets.your-own-preset]
# language = "en-US"
# voice_name = "en-US-xxxx-A"
# speaking_rate = 1.0

# database configuration
[database]
# valid drivers are "sqlite3", "mysql", "postgres"
driver = "sqlite3"
# the data source name (dsn) to connect to the database
dsn = "./text-to-speech.db"
# dsn = "postgres://user:password@host:port/dbname?sslmode=require" # for postgres
# dsn = "user:password@tcp(host:port)/dbname" # for mysql

# optional configuration for redis caching
# this will save costs for the tts requests to the Google Cloud Text-to-Speech API.
# if enabled, the bot will cache the tts audio files in redis.
[redis]
# whether to enable redis caching tts
enable = false
# the redis url to connect to
url = "redis://localhost:6379"
# the time after which the cached tts audio files expire
# note: int values are interpreted as nanoseconds -> see here: https://pkg.go.dev/github.com/BurntSushi/toml#Decoder
#       string values are interpreted as duration strings like "3600s" for 1 hour -> see here: https://pkg.go.dev/time#ParseDuration
ttl = "1h"
